// Code generated by protoc-gen-go. DO NOT EDIT.
// source: groceries.proto

package groceries

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddb4324f686336a5, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type GroceryItems struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroceryItems) Reset()         { *m = GroceryItems{} }
func (m *GroceryItems) String() string { return proto.CompactTextString(m) }
func (*GroceryItems) ProtoMessage()    {}
func (*GroceryItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddb4324f686336a5, []int{1}
}

func (m *GroceryItems) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroceryItems.Unmarshal(m, b)
}
func (m *GroceryItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroceryItems.Marshal(b, m, deterministic)
}
func (m *GroceryItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroceryItems.Merge(m, src)
}
func (m *GroceryItems) XXX_Size() int {
	return xxx_messageInfo_GroceryItems.Size(m)
}
func (m *GroceryItems) XXX_DiscardUnknown() {
	xxx_messageInfo_GroceryItems.DiscardUnknown(m)
}

var xxx_messageInfo_GroceryItems proto.InternalMessageInfo

func (m *GroceryItems) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "groceries.Empty")
	proto.RegisterType((*GroceryItems)(nil), "groceries.GroceryItems")
}

func init() {
	proto.RegisterFile("groceries.proto", fileDescriptor_ddb4324f686336a5)
}

var fileDescriptor_ddb4324f686336a5 = []byte{
	// 124 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x2f, 0xca, 0x4f,
	0x4e, 0x2d, 0xca, 0x4c, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0xb1, 0x73, 0xb1, 0xba, 0xe6, 0x16, 0x94, 0x54, 0x2a, 0x69, 0x70, 0xf1, 0xb8, 0x83, 0x45, 0x2b,
	0x3d, 0x4b, 0x52, 0x73, 0x8b, 0x85, 0x24, 0xb8, 0xd8, 0x73, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53,
	0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x60, 0x5c, 0x23, 0x27, 0x2e, 0x4e, 0x77, 0x98, 0x7e,
	0x21, 0x53, 0x2e, 0x36, 0xf7, 0xd4, 0x12, 0xc7, 0x9c, 0x1c, 0x21, 0x01, 0x3d, 0x84, 0x35, 0x60,
	0x23, 0xa5, 0xc4, 0x91, 0x44, 0x90, 0xcd, 0x56, 0x62, 0x48, 0x62, 0x03, 0x3b, 0xc4, 0x18, 0x10,
	0x00, 0x00, 0xff, 0xff, 0xda, 0xbb, 0x18, 0x64, 0x9b, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GroceriesClient is the client API for Groceries service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GroceriesClient interface {
	// Returns all grocery list items
	GetAll(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GroceryItems, error)
}

type groceriesClient struct {
	cc grpc.ClientConnInterface
}

func NewGroceriesClient(cc grpc.ClientConnInterface) GroceriesClient {
	return &groceriesClient{cc}
}

func (c *groceriesClient) GetAll(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GroceryItems, error) {
	out := new(GroceryItems)
	err := c.cc.Invoke(ctx, "/groceries.Groceries/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GroceriesServer is the server API for Groceries service.
type GroceriesServer interface {
	// Returns all grocery list items
	GetAll(context.Context, *Empty) (*GroceryItems, error)
}

// UnimplementedGroceriesServer can be embedded to have forward compatible implementations.
type UnimplementedGroceriesServer struct {
}

func (*UnimplementedGroceriesServer) GetAll(ctx context.Context, req *Empty) (*GroceryItems, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}

func RegisterGroceriesServer(s *grpc.Server, srv GroceriesServer) {
	s.RegisterService(&_Groceries_serviceDesc, srv)
}

func _Groceries_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroceriesServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/groceries.Groceries/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroceriesServer).GetAll(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Groceries_serviceDesc = grpc.ServiceDesc{
	ServiceName: "groceries.Groceries",
	HandlerType: (*GroceriesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAll",
			Handler:    _Groceries_GetAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "groceries.proto",
}
